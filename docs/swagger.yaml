basePath: /
definitions:
  pkg_handlers.CreateAPIKeyInput:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  pkg_handlers.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  pkg_handlers.RegisterInput:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
host: localhost:8080
info:
  contact:
    email: femi.akinlotan@devopsfoundry.com
    name: Femi Akinlotan
  description: A secure API management platform with authentication and API key management.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Secure API Management Platform
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/pkg_handlers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful with token
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid credentials
          schema:
            additionalProperties: true
            type: object
      summary: Login user
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Invalidate the current JWT token
      produces:
      - application/json
      responses:
        "200":
          description: Logout successful
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Logout user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with username, email, and password
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/pkg_handlers.RegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - auth
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user (admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Access denied
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete user
      tags:
      - users
  /users/api-keys:
    get:
      consumes:
      - application/json
      description: Get all API keys for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: List of API keys
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: List API keys
      tags:
      - api-keys
    post:
      consumes:
      - application/json
      description: Generate a new API key for the authenticated user
      parameters:
      - description: API key details
        in: body
        name: key
        required: true
        schema:
          $ref: '#/definitions/pkg_handlers.CreateAPIKeyInput'
      produces:
      - application/json
      responses:
        "201":
          description: API key created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create API key
      tags:
      - api-keys
  /users/api-keys/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a specific API key
      parameters:
      - description: API key ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: API key deleted successfully
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: API key not found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Delete API key
      tags:
      - api-keys
  /users/me:
    get:
      consumes:
      - application/json
      description: Get the profile of the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: User profile
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: Authentication operations
  name: auth
- description: User operations
  name: users
